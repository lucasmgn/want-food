spring.datasource.url=jdbc:mysql://localhost/wantfood?createDatabaseIfNotExist=true&severTimezone=UTC
spring.datasource.username=root
spring.datasource.password=auhpuk260202
 
#Colocando localizacao dos scripts para o flyway
spring.flyway.locations=classpath:db/migration,classpath:db/testdata
 
#Para mostrar o sql no console
spring.jpa.show-sql=true
 
#Dialeto
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect

#Utilizado para identificar propriedades que nao existem e sinalizar um erro
spring.jackson.deserialization.fail-on-unknown-properties=true

#Utilizado para mostrar um falha se uma propriedade estiver sento ignorando @JSonIgnore
spring.jackson.deserialization.fail-on-ignored-properties=true

#Se não tiver um código mapeável para a url, lança uma exception
spring.mvc.throw-exception-if-no-handler-found=true

#Desabilitando o resource handler do spring, arquivos estaticos como fotos
spring.web.resources.add-mappings=false

#diretorio de armazenametos de fotos local
wantfood.storage.local.diretorio-fotos=/Users/lucas/fotos-wantfood

#diretorio de armazenamento da amazon s3
#wantfood.storage.s3.id-chave-acesso= dashboard config
#wantfood.storage.s3.chave-acesso-secreta=
wantfood.storage.s3.bucket=wantfood-test
wantfood.storage.s3.regiao=us-east-1
wantfood.storage.s3.diretorio-fotos=catalogo

#Mostra qual o tipo de armazenamento que eu desejo usar, s3 ou local
wantfood.storage.tipo=local

#Configuração do SendGrid, no spring.mail.username= sempre será apiKey
spring.mail.host=smtp.sendgrid.net
spring.mail.port=587
spring.mail.username=apikey
#spring.mail.password=

#Propriedade usada em core/email/EmailProperties
wantfood.email.remetente=WantFood <lucasmagno695@gmail.com>

#Freemarker
spring.freemarker.settings.locale=pt_BR

#Alterando o max padrão do MultipartFile
#spring.servlet.multipart.max-file-size=3KB
#spring.servlet.multipart.max-request-size=20MB

 #Gerar o script de ctiacao de tabela
#spring.jpa.generate-ddl=true 

 #Forma de como quer ser executado, "create" dropa e cria as tabelas
#spring.jpa.hibernate.ddl-auto=create

#Gerando apenas os schemas
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create

#Criando o arquivo onde ficara os scripts de ddl
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql

#Configurando o hikari para te no maximo de conexao 5 e no minimo 3, o padrao � 10
#spring.datasource.hikari.maximum-pool-size=5
#spring.datasource.hikari.minimum-idle=3

#Colocando o tempo limite para os pools ociosos serem excluidos, em milissegundos o minimo s�o 10000(10 s)
#spring.datasource.hikari.idle-timeout=10000

#server.error.include-stacktrace=never